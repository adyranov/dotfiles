name: CI

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 23 * * *"
  workflow_dispatch:
    inputs:
      publish-image:
        type: choice
        description: Publish a docker image
        required: true
        options:
          - YES
          - NO
        default: YES

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true
env:
  PUBLISH_IMAGE: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.publish-image == 'YES' }}
jobs:
  host-build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Run install
        run: GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} ./install.sh
      - name: Run tests
        run: ./test/run_tests.sh
  docker-build:
    strategy:
      matrix:
        os: [alpine, ubuntu]
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ github.repository }}
          tags: |
            type=raw,enable=true,priority=100,value=latest-${{ matrix.os }}
          flavor: latest=${{ contains(matrix.os, 'alpine') }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile-${{ matrix.os }}
          context: .
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.os }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.os }}, mode=max
          platforms: linux/amd64,linux/arm64
          push: ${{ env.PUBLISH_IMAGE == 'true' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.8.0
        with:
          image-ref: "${{ fromJSON(steps.metadata.outputs.json).tags[0] }}"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
          format: "sarif"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
          category: ${{ matrix.os }}
