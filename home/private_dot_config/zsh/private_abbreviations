abbr bcubc="brew upgrade --cask && brew cleanup"
abbr bcubo="brew update && brew outdated --cask"
abbr brewp="brew pin"
abbr brewsp="brew list --pinned"
abbr bubc="brew upgrade && brew cleanup"
abbr bubo="brew update && brew outdated"
abbr bubu="brew update && brew outdated && brew upgrade && brew cleanup"
abbr buf="brew upgrade --formula"
abbr cz="chezmoi"
abbr cza="chezmoi apply"
abbr czd="chezmoi diff"
abbr czs="cd \$(chezmoi source-path)"
abbr czu="chezmoi update"
abbr d64="decode64"
abbr e64="encode64"
abbr g="git"
abbr ga="git add"
abbr gaa="git add --all"
abbr gam="git am"
abbr gama="git am --abort"
abbr gamc="git am --continue"
abbr gams="git am --skip"
abbr gamscp="git am --show-current-patch"
abbr gap="git apply"
abbr gapa="git add --patch"
abbr gapt="git apply --3way"
abbr gau="git add --update"
abbr gav="git add --verbose"
abbr gb="git branch"
abbr gba="git branch -a"
abbr gbD="git branch -D"
abbr gbd="git branch -d"
abbr gbda="git branch --no-color --merged | command grep -vE \"^([+*]|\s*(\$(git_main_branch)|\$(git_develop_branch))\s*\$)\" | command xargs git branch -d 2>/dev/null"
abbr gbl="git blame -b -w"
abbr gbnm="git branch --no-merged"
abbr gbr="git branch --remote"
abbr gbs="git bisect"
abbr gbsb="git bisect bad"
abbr gbsg="git bisect good"
abbr gbsr="git bisect reset"
abbr gbss="git bisect start"
abbr gc="git commit -v"
abbr gca="git commit -v -a"
abbr gcam="git commit -a -m"
abbr gcas="git commit -a -s"
abbr gcasm="git commit -a -s -m"
abbr gcb="git checkout -b"
abbr gcd="git checkout \$(git_develop_branch)"
abbr gcf="git config --list"
abbr gcl="git clone --recurse-submodules"
abbr gclean="git clean -id"
abbr gcm="git checkout \$(git_main_branch)"
abbr gcmsg="git commit -m"
abbr gco="git checkout"
abbr gcor="git checkout --recurse-submodules"
abbr gcount="git shortlog -sn"
abbr gcp="git cherry-pick"
abbr gcpa="git cherry-pick --abort"
abbr gcpc="git cherry-pick --continue"
abbr gcs="git commit -S"
abbr gcsm="git commit -s -m"
abbr gcss="git commit -S -s"
abbr gcssm="git commit -S -s -m"
abbr gd="git diff"
abbr gdca="git diff --cached"
abbr gdct="git describe --tags \$(git rev-list --tags --max-count=1)"
abbr gdcw="git diff --cached --word-diff"
abbr gds="git diff --staged"
abbr gdt="git diff-tree --no-commit-id --name-only -r"
abbr gdup="git diff @{upstream}"
abbr gdw="git diff --word-diff"
abbr gf="git fetch"
abbr gfa="git fetch --all --prune --jobs=10"
abbr gfg="git ls-files | grep"
abbr gfo="git fetch origin"
abbr gg="git gui citool"
abbr gga="git gui citool --amend"
abbr ggpull="git pull origin \"\$(git_current_branch)\""
abbr ggpur="ggu"
abbr ggpush="git push origin \"\$(git_current_branch)\""
abbr ggsup="git branch --set-upstream-to=origin/\$(git_current_branch)"
abbr ghh="git help"
abbr gignore="git update-index --assume-unchanged"
abbr gignored="git ls-files -v | grep \"^[[:lower:]]\""
abbr git-svn-dcommit-push="git svn dcommit && git push github \$(git_main_branch):svntrunk"
abbr gk="\gitk --all --branches &\\!"
abbr gke="\gitk --all \$(git log -g --pretty=%h) &\\!"
abbr gl="git pull"
abbr glg="git log --stat"
abbr glgg="git log --graph"
abbr glgga="git log --graph --decorate --all"
abbr glgm="git log --graph --max-count=10"
abbr glgp="git log --stat -p"
abbr glo="git log --oneline --decorate"
abbr glod="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'"
abbr glods="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
abbr glog="git log --oneline --decorate --graph"
abbr gloga="git log --oneline --decorate --graph --all"
abbr glol="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'"
abbr glola="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --all"
abbr glols="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --stat"
abbr glp="_git_log_prettily"
abbr gluc="git pull upstream \$(git_current_branch)"
abbr glum="git pull upstream \$(git_main_branch)"
abbr gm="git merge"
abbr gma="git merge --abort"
abbr gmom="git merge origin/\$(git_main_branch)"
abbr gmtl="git mergetool --no-prompt"
abbr gmtlvim="git mergetool --no-prompt --tool=vimdiff"
abbr gmum="git merge upstream/\$(git_main_branch)"
abbr gp="git push"
abbr gpd="git push --dry-run"
abbr gpf="git push --force-with-lease"
abbr gpoat="git push origin --all && git push origin --tags"
abbr gpr="git pull --rebase"
abbr gpristine="git reset --hard && git clean -dffx"
abbr gpsup="git push --set-upstream origin \$(git_current_branch)"
abbr gpu="git push upstream"
abbr gpv="git push -v"
abbr gr="git remote"
abbr gra="git remote add"
abbr grb="git rebase"
abbr grba="git rebase --abort"
abbr grbc="git rebase --continue"
abbr grbd="git rebase \$(git_develop_branch)"
abbr grbi="git rebase -i"
abbr grbm="git rebase \$(git_main_branch)"
abbr grbo="git rebase --onto"
abbr grbom="git rebase origin/\$(git_main_branch)"
abbr grbs="git rebase --skip"
abbr grev="git revert"
abbr grh="git reset"
abbr grhh="git reset --hard"
abbr grm="git rm"
abbr grmc="git rm --cached"
abbr grmv="git remote rename"
abbr groh="git reset origin/\$(git_current_branch) --hard"
abbr grrm="git remote remove"
abbr grs="git restore"
abbr grset="git remote set-url"
abbr grss="git restore --source"
abbr grst="git restore --staged"
abbr grt="cd \"\$(git rev-parse --show-toplevel || echo .)\""
abbr gru="git reset --"
abbr grup="git remote update"
abbr grv="git remote -v"
abbr gsb="git status -sb"
abbr gsd="git svn dcommit"
abbr gsh="git show"
abbr gsi="git submodule init"
abbr gsps="git show --pretty=short --show-signature"
abbr gsr="git svn rebase"
abbr gss="git status -s"
abbr gst="git status"
abbr gsta="git stash push"
abbr gstaa="git stash apply"
abbr gstall="git stash --all"
abbr gstc="git stash clear"
abbr gstd="git stash drop"
abbr gstl="git stash list"
abbr gstp="git stash pop"
abbr gsts="git stash show --text"
abbr gstu="git stash push --include-untracked"
abbr gsu="git submodule update"
abbr gsw="git switch"
abbr gswc="git switch -c"
abbr gswd="git switch \$(git_develop_branch)"
abbr gswm="git switch \$(git_main_branch)"
abbr gts="git tag -s"
abbr gtv="git tag | sort -V"
abbr gunignore="git update-index --no-assume-unchanged"
abbr gunwip="git log -n 1 | grep -q -c \"\-\-wip\-\-\" && git reset HEAD~1"
abbr gup="git pull --rebase"
abbr gupa="git pull --rebase --autostash"
abbr gupav="git pull --rebase --autostash -v"
abbr gupom="git pull --rebase origin \$(git_main_branch)"
abbr gupomi="git pull --rebase=interactive origin \$(git_main_branch)"
abbr gupv="git pull --rebase -v"
abbr gwch="git whatchanged -p --abbrev-commit --pretty=medium"
abbr gwip="git add -A; git rm \$(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m \"--wip-- [skip ci]\""
abbr k="kubectl"
abbr kaf="kubectl apply -f"
abbr kccc="kubectl config current-context"
abbr kcdc="kubectl config delete-context"
abbr kcgc="kubectl config get-contexts"
abbr kcn="kubectl config set-context --current --namespace"
abbr kcp="kubectl cp"
abbr kcsc="kubectl config set-context"
abbr kctx="kubectx"
abbr kcuc="kubectl config use-context"
abbr kdcj="kubectl describe cronjob"
abbr kdcm="kubectl describe configmap"
abbr kdd="kubectl describe deployment"
abbr kdds="kubectl describe daemonset"
abbr kdel="kubectl delete"
abbr kdelcj="kubectl delete cronjob"
abbr kdelcm="kubectl delete configmap"
abbr kdeld="kubectl delete deployment"
abbr kdelds="kubectl delete daemonset"
abbr kdelf="kubectl delete -f"
abbr kdeli="kubectl delete ingress"
abbr kdelj="kubectl delete job"
abbr kdelno="kubectl delete node"
abbr kdelns="kubectl delete namespace"
abbr kdelp="kubectl delete pods"
abbr kdelpvc="kubectl delete pvc"
abbr kdels="kubectl delete svc"
abbr kdelsa="kubectl delete sa"
abbr kdelsec="kubectl delete secret"
abbr kdelss="kubectl delete statefulset"
abbr kdi="kubectl describe ingress"
abbr kdj="kubectl describe job"
abbr kdno="kubectl describe node"
abbr kdns="kubectl describe namespace"
abbr kdp="kubectl describe pods"
abbr kdpvc="kubectl describe pvc"
abbr kdrs="kubectl describe replicaset"
abbr kds="kubectl describe svc"
abbr kdsa="kubectl describe sa"
abbr kdsec="kubectl describe secret"
abbr kdss="kubectl describe statefulset"
abbr kecj="kubectl edit cronjob"
abbr kecm="kubectl edit configmap"
abbr ked="kubectl edit deployment"
abbr keds="kubectl edit daemonset"
abbr kei="kubectl edit ingress"
abbr kej="kubectl edit job"
abbr keno="kubectl edit node"
abbr kens="kubectl edit namespace"
abbr kep="kubectl edit pods"
abbr kepvc="kubectl edit pvc"
abbr kers="kubectl edit replicaset"
abbr kes="kubectl edit svc"
abbr kess="kubectl edit statefulset"
abbr keti="kubectl exec -t -i"
abbr kga="kubectl get all"
abbr kgaa="kubectl get all --all-namespaces"
abbr kgcj="kubectl get cronjob"
abbr kgcm="kubectl get configmaps"
abbr kgcma="kubectl get configmaps --all-namespaces"
abbr kgd="kubectl get deployment"
abbr kgda="kubectl get deployment --all-namespaces"
abbr kgds="kubectl get daemonset"
abbr kgdsw="kubectl get daemonset --watch"
abbr kgdw="kubectl get deployment --watch"
abbr kgdwide="kubectl get deployment -o wide"
abbr kgi="kubectl get ingress"
abbr kgia="kubectl get ingress --all-namespaces"
abbr kgj="kubectl get job"
abbr kgno="kubectl get nodes"
abbr kgns="kubectl get namespaces"
abbr kgp="kubectl get pods"
abbr kgpa="kubectl get pods --all-namespaces"
abbr kgpall="kubectl get pods --all-namespaces -o wide"
abbr kgpl="kubectl get pods -l"
abbr kgpn="kubectl get pods -n"
abbr kgpvc="kubectl get pvc"
abbr kgpvca="kubectl get pvc --all-namespaces"
abbr kgpvcw="kubectl get pvc --watch"
abbr kgpw="kubectl get pods --watch"
abbr kgpwide="kubectl get pods -o wide"
abbr kgrs="kubectl get replicaset"
abbr kgs="kubectl get svc"
abbr kgsa="kubectl get svc --all-namespaces"
abbr kgsec="kubectl get secret"
abbr kgseca="kubectl get secret --all-namespaces"
abbr kgss="kubectl get statefulset"
abbr kgssa="kubectl get statefulset --all-namespaces"
abbr kgssw="kubectl get statefulset --watch"
abbr kgsswide="kubectl get statefulset -o wide"
abbr kgsw="kubectl get svc --watch"
abbr kgswide="kubectl get svc -o wide"
abbr kl="kubectl logs"
abbr kl1h="kubectl logs --since 1h"
abbr kl1m="kubectl logs --since 1m"
abbr kl1s="kubectl logs --since 1s"
abbr klf="kubectl logs -f"
abbr klf1h="kubectl logs --since 1h -f"
abbr klf1m="kubectl logs --since 1m -f"
abbr klf1s="kubectl logs --since 1s -f"
abbr kns="kubens"
abbr kpf="kubectl port-forward"
abbr krh="kubectl rollout history"
abbr krsd="kubectl rollout status deployment"
abbr krsss="kubectl rollout status statefulset"
abbr kru="kubectl rollout undo"
abbr ksd="kubectl scale deployment"
abbr ksss="kubectl scale statefulset"
abbr tf="terraform"
abbr tfa="terraform apply"
abbr tfd="terraform destroy"
abbr tff="terraform fmt"
abbr tfi="terraform init"
abbr tfo="terraform output"
abbr tfp="terraform plan"
abbr tfv="terraform validate"
abbr tg="terragrunt"
abbr tga="terragrunt apply"
abbr tgc="terragrunt console"
abbr tgd="terragrunt destroy"
abbr tgf="terragrunt fmt"
abbr tgfu="terragrunt force-unlock"
abbr tgi="terragrunt init"
abbr tgo="terragrunt output"
abbr tgp="terragrunt plan"
abbr tgt="terragrunt taint"
abbr tgv="terragrunt validate"
abbr x="extract"
