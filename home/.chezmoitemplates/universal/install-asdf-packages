ASDF_DIR="${HOME}/.asdf"
[ ! -d $ASDF_DIR ] && git clone https://github.com/asdf-vm/asdf.git "${ASDF_DIR}"

. ${ASDF_DIR}/asdf.sh

function install_asdf {
    IFS=', ' read -r -a array <<< ${2}
    asdf plugin-add "${1}" 2>/dev/null || true
    version="${2}"
    if [[ ${2} == "latest" ]]; then
        version=$(asdf latest ${1})
    fi
    echo Installing \"${1}\" version \"${version}\"
    asdf install ${1} ${version}
    asdf global ${1} ${version}
    asdf reshim ${1} ${version}
}

{{ range .asdf.plugins -}}
echo Installing ASDF custom plugin \"{{ .name -}}\"
asdf plugin add {{ .name }} {{ .url }} 2>/dev/null || true
asdf plugin update --all
{{ end -}}

{{- range $package := .packages }}
{{- $packageName := $package.name }}

{{- $excludeNative := false }}
{{- if (eq $.host.distro.id "ubuntu") }}
{{- $excludeNative = get $package "no-apt" | default false}}
{{- end }}
{{- if (eq $.host.distro.id "alpine") }}
{{- $excludeNative = get $package "no-apk" | default false }}
{{- end }}
{{- if (eq $.host.distro.family "darwin") }}
{{- $excludeNative = get $package "no-brew" | default false }}
{{- end }}

{{- $asdfName := get $package "asdf"}}
{{- $asdfVersion := get $package "asdfVersion"}}
{{- if and ($excludeNative) (or $asdfName $asdfVersion) }}
install_asdf "{{ $asdfName | default $packageName }}" "{{ $asdfVersion | default "latest"}}"
{{- end }}
{{- end }}
