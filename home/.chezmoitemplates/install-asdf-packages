ASDF_DIR="${HOME}/.asdf"
[ ! -d $ASDF_DIR ] && git clone https://github.com/asdf-vm/asdf.git "${ASDF_DIR}"

. ${ASDF_DIR}/asdf.sh

function install_asdf {
    IFS=', ' read -r -a array <<< ${2}
    asdf plugin-add "${1}" 2>/dev/null || true
    version="${2}"
    if [[ ${2} == "latest" ]]; then
        version=$(asdf latest ${1})
    fi
    echo Installing \"${1}\" version \"${version}\"
    asdf install ${1} ${version}
    asdf global ${1} ${version}
    asdf reshim ${1} ${version}
}

{{- $excludeFlag := "no-brew" }}
{{- if (eq .chezmoi.os "linux") }}
{{- if (eq .chezmoi.osRelease.id "ubuntu") }}
{{- $excludeFlag = "no-apt" }}
{{- end }}
{{- if (eq .chezmoi.osRelease.id "alpine") }}
{{- $excludeFlag = "no-apk" }}
{{- end }}
{{- end }}
{{- range $package := .packages }}
{{- if and (contains "asdf" $package) (contains $excludeFlag $package)  }}
{{- $nameVer := regexReplaceAll "(\\w+) \\[.*asdf:(.*):(.*)\\]$" $package "${1} ${2} ${3}" }}
{{- $nameVer = regexSplit " " $nameVer -1 }}
{{- $packageName := first $nameVer | trim }}
{{- $asdfName := first (rest $nameVer) | trim | default $packageName}}
{{- $asdfVersion := last $nameVer | trim }}
install_asdf "{{ $asdfName }}" "{{ $asdfVersion }}"
{{- end }}
{{- end }}
